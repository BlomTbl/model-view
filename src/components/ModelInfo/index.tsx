import React, { PureComponent, FunctionComponent } from 'react';
import { Properties } from '@turf/helpers';
import FeatureProperties from '../FeatureProperties';
import format from 'date-fns/format'
import './index.css';


export const testFeature = {

  "table": "wn_meter", "us_node_id": "12345", "ds_node_id": "67899", "link_suffix": "1",
  "demand": [0.08589446544647217, 0.08556421101093292, 0.07438356429338455, 0.06912852823734283, 0.06649583578109741, 0.05993024632334709, 0.05730804055929184, 0.05993956699967384, 0.062241844832897186, 0.0596310980618, 0.05927985906600952, 0.05730888247489929, 0.05535764992237091, 0.052394669502973557, 0.056656934320926666, 0.053045403212308884, 0.05139247328042984, 0.05515359342098236, 0.05570881813764572, 0.05600768327713013, 0.061911553144454956, 0.06454535573720932, 0.0738489106297493, 0.08676840364933014, 0.09738458693027496, 0.12088033556938171, 0.14887462556362152, 0.18509383499622345, 0.2492588311433792, 0.2250021994113922, 0.21893805265426636, 0.2766243517398834, 0.26707175374031067, 0.2505423128604889, 0.2510850131511688, 0.25116896629333496, 0.2271173745393753, 0.21376200020313263, 0.2110820859670639, 0.21064259111881256, 0.21042300760746002, 0.21020343899726868, 0.20778897404670715, 0.21104936301708221, 0.18771836161613464, 0.18278305232524872, 0.17161284387111664, 0.16145595908164978, 0.16634704172611237, 0.16111503541469574, 0.16209428012371063, 0.1558629721403122, 0.14829492568969727, 0.15322619676589966, 0.14731156826019287, 0.13779470324516296, 0.1423756331205368, 0.13123756647109985, 0.1384422332048416, 0.1338433474302292, 0.11447832733392715, 0.11840414255857468, 0.11512225866317749, 0.11905406415462494, 0.11905469745397568, 0.11152325570583344, 0.09180673211812973, 0.11486421525478363, 0.10791705548763275, 0.10428173094987869, 0.0914999321103096, 0.09904778003692627, 0.14044232666492462, 0.15419620275497437, 0.14172717928886414, 0.13909314572811127, 0.1460084319114685, 0.14731070399284363, 0.14797158539295197, 0.14732150733470917, 0.19229739904403687, 0.1818249374628067, 0.20252828299999237, 0.20780909061431885, 0.23640543222427368, 0.21490885317325592, 0.21385295689105988, 0.21142305433750153, 0.19331733882427216, 0.19627666473388672, 0.16112513840198517, 0.17392507195472717, 0.16310721635818481, 0.16624052822589874, 0.1513095498085022, 0.16034595668315887, 0.15063130855560303, 0.1525116264820099, 0.14482755959033966, 0.12896762788295746, 0.11669924855232239, 0.1156969666481018, 0.10026378184556961, 0.09370825439691544],
  "flow": [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]

}


type DefaultContainer = {}

const DefaultContainer: FunctionComponent<DefaultContainer> = ({ children }) => <div className="control-panel">{children}</div>;

export interface ModelInfoSetting {
  modeName: string,
  currentTimestep: number,
  timesteps: Date[],
  selectedFeature: { [name: string]: any; }
}


type ModelInfoProps = {
  settings: ModelInfoSetting,
  onChange: (value: string) => void;
}


const ModelInfo: FunctionComponent<ModelInfoProps> = ({ settings, onChange }) => {

  return (
    <DefaultContainer>
      <h2>{format(
        settings.timesteps[settings.currentTimestep],
        'Do MMMM YY'
      )}</h2>
      <h1>{format(
        settings.timesteps[settings.currentTimestep],
        'HH:mm'
      )}</h1>
      <div key={name} className="input">
        <input type="range" value={settings.currentTimestep}
          min={0} max={settings.timesteps.length - 1} step={1}
          onChange={evt => onChange(evt.target.value)}
        />
      </div>
      <hr />
      {settings.selectedFeature &&
        <FeatureProperties key={settings.selectedFeature.us_node_id} feature={settings} tsv={Object.keys(settings.selectedFeature).filter(key => settings.selectedFeature[key].constructor === Array)} />
      }


    </DefaultContainer>
  );
}


export default ModelInfo
